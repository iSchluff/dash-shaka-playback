{"version":3,"sources":["webpack://DashShakaPlayback/webpack/universalModuleDefinition","webpack://DashShakaPlayback/webpack/bootstrap","webpack://DashShakaPlayback/./src/clappr-dash-shaka-playback.js","webpack://DashShakaPlayback/external {\"amd\":\"clappr\",\"commonjs\":\"clappr\",\"commonjs2\":\"clappr\",\"root\":\"Clappr\"}","webpack://DashShakaPlayback/external \"shaka\""],"names":["SEND_STATS_INTERVAL_MS","DEFAULT_LEVEL_AUTO","DashShakaPlayback","_duration","shakaPlayerInstance","getMediaElement","currentTime","seekRange","start","player","Player","version","_player","_levels","id","_currentLevelId","isAuto","trigger","PLAYBACK_LEVEL_SWITCH_START","configure","abr","enabled","_pendingAdaptationEvent","selectTrack","videoTracks","filter","t","PLAYBACK_LEVEL_SWITCH_END","_minDvrSize","getPlaybackType","end","manifest","getManifest","presentationTimeline","getStats","estimatedBandwidth","resource","mimeType","polyfill","installAll","browserSupported","isBrowserSupported","resourceParts","split","match","indexOf","SHAKA_READY","args","_isShakaReadyState","options","shakaMinimumDvrSize","Date","getPresentationStartTime","status","PLAYBACK_DVR","PLAYBACK_STATS_ADD","time","warn","dvrEnabled","_updateDvr","_startTime","_setup","isReady","once","Events","play","_stopped","_src","el","src","_startTimeUpdateTimer","_stopTimeUpdateTimer","_timeUpdateTimer","setInterval","_onTimeUpdate","clearInterval","PLAYBACK_READY","name","event","error","sendStatsId","_sendStats","unload","then","catch","isLive","language","role","selectAudioLanguage","track","type","selectTextTrack","selectVariantTrack","startsWith","_onAdaptation","Error","isEnable","textTracks","_shakaTTVisible","Array","from","kind","forEach","mode","_ccIsSetup","hasClosedCaptionsTracks","PLAYBACK_SUBTITLE_AVAILABLE","trackId","closedCaptionsTrackId","destroy","_destroy","_createPlayer","_options","shakaConfiguration","shakaOnBeforeLoad","playerLoaded","load","_loaded","e","_setupError","addEventListener","_onError","bind","_onBuffering","fragDateTime","getProgramDateTime","update","current","getCurrentTime","total","getDuration","firstFragDateTime","isSame","_lastTimeUpdate","PLAYBACK_TIMEUPDATE","buffering","PLAYBACK_BUFFERING","PLAYBACK_BUFFERFULL","_onShakaReady","_startToSendStats","_fillLevels","_checkForClosedCaptions","length","slice","reverse","PLAYBACK_LEVELS_AVAILABLE","levels","intervalMs","shakaSendStatsInterval","err","shakaError","videoError","detail","category","code","severity","isCritical","util","Severity","CRITICAL","errorData","description","level","Levels","FATAL","WARN","raw","formattedError","createError","PLAYBACK_ERROR","activeVideo","active","debug","highDefinition","height","PLAYBACK_HIGHDEFINITIONUPDATE","PLAYBACK_BITRATE","bandwidth","width","bitrate","videoBandwidth","settings","left","seekEnabled","isSeekEnabled","PLAYBACK_SETTINGSUPDATE","getTextTracks","getAudioLanguages","getVariantTracks","tracks","map","label","closedCaptionsTracks","showingTrack","find","info","setTextTrackVisibility","_enableShakaTextTrack","_ccTrackId","PLAYBACK_SUBTITLE_CHANGED"],"mappings":"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","file":"dash-shaka-playback.external.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"clappr\"), require(\"shaka\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"clappr\", \"shaka\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DashShakaPlayback\"] = factory(require(\"clappr\"), require(\"shaka\"));\n\telse\n\t\troot[\"DashShakaPlayback\"] = factory(root[\"Clappr\"], root[\"shaka\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_clappr__, __WEBPACK_EXTERNAL_MODULE_shaka_player__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/clappr-dash-shaka-playback.js\");\n","import {HTML5Video, Log, Events, PlayerError} from 'clappr'\nimport shaka from 'shaka-player'\n\nconst SEND_STATS_INTERVAL_MS = 30 * 1e3\nconst DEFAULT_LEVEL_AUTO = -1\n\nclass DashShakaPlayback extends HTML5Video {\n  static get Events () {\n    return {\n      SHAKA_READY: 'shaka:ready'\n    }\n  }\n\n  static canPlay (resource, mimeType = '') {\n    shaka.polyfill.installAll()\n    let browserSupported = shaka.Player.isBrowserSupported()\n    let resourceParts = resource.split('?')[0].match(/.*\\.(.*)$/) || []\n    return browserSupported && ((resourceParts[1] === 'mpd') || mimeType.indexOf('application/dash+xml') > -1)\n  }\n\n  get name () {\n    return 'dash_shaka_playback'\n  }\n\n  get shakaVersion () {\n    return shaka.player.Player.version\n  }\n\n  get shakaPlayerInstance () {\n    return this._player\n  }\n\n  get levels () {\n    return this._levels\n  }\n\n  get seekRange() {\n    return this.shakaPlayerInstance.seekRange()\n  }\n\n  set currentLevel (id) {\n    this._currentLevelId = id\n    let isAuto = this._currentLevelId === DEFAULT_LEVEL_AUTO\n\n    this.trigger(Events.PLAYBACK_LEVEL_SWITCH_START)\n    if (!isAuto) {\n      this._player.configure({abr: {enabled: false}})\n      this._pendingAdaptationEvent = true\n      this.selectTrack(this.videoTracks.filter((t) => t.id === this._currentLevelId)[0])\n    }\n    else {\n      this._player.configure({abr: {enabled: true}})\n      this.trigger(Events.PLAYBACK_LEVEL_SWITCH_END)\n    }\n  }\n\n  get currentLevel () {\n    return this._currentLevelId || DEFAULT_LEVEL_AUTO\n  }\n\n  get dvrEnabled() {\n    return this._duration >= this._minDvrSize && this.getPlaybackType() === 'live'\n  }\n\n  getDuration() {\n    return this._duration\n  }\n\n  get _duration() {\n    if (!this.shakaPlayerInstance) return 0\n\n    return this.seekRange.end - this.seekRange.start\n  }\n\n  getCurrentTime() {\n    return this.shakaPlayerInstance.getMediaElement().currentTime - this.seekRange.start\n  }\n\n  get _startTime() {\n    return this.seekRange.start\n  }\n\n  get presentationTimeline() {\n    const manifest = this.shakaPlayerInstance.getManifest();\n    return manifest ? manifest.presentationTimeline : null;\n  }\n\n  get bandwidthEstimate() {\n    if (!this.shakaPlayerInstance) return\n    return this.shakaPlayerInstance.getStats().estimatedBandwidth\n  }\n\n  constructor (...args) {\n    super(...args)\n    this._levels = []\n    this._pendingAdaptationEvent = false\n    this._isShakaReadyState = false\n\n    this._minDvrSize = typeof (this.options.shakaMinimumDvrSize) === 'undefined' ? 60 : this.options.shakaMinimumDvrSize\n  }\n\n  getProgramDateTime() {\n    const presentationTimeline = this.presentationTimeline\n    if (!presentationTimeline)\n      return null;\n    return new Date((presentationTimeline.getPresentationStartTime() + this.seekRange.start) * 1000)\n  }\n\n  _updateDvr(status) {\n    this.trigger(Events.PLAYBACK_DVR, status)\n    this.trigger(Events.PLAYBACK_STATS_ADD, { 'dvr': status })\n  }\n\n  seek(time) {\n    if (time < 0) {\n      Log.warn('Attempt to seek to a negative time. Resetting to live point. Use seekToLivePoint() to seek to the live point.')\n      time = this._duration\n    }\n    // assume live if time within 3 seconds of end of stream\n    this.dvrEnabled && this._updateDvr(time < this._duration-3)\n    time += this._startTime\n    super.seek(time)\n  }\n\n  pause() {\n    super.pause()\n\n    if (this.dvrEnabled)\n      this._updateDvr(true)\n  }\n\n  play () {\n    if (!this._player) {\n      this._setup()\n    }\n\n    if (!this.isReady) {\n      this.once(DashShakaPlayback.Events.SHAKA_READY, this.play)\n      return\n    }\n\n    this._stopped = false\n    this._src = this.el.src\n    super.play()\n    this._startTimeUpdateTimer()\n  }\n\n  _startTimeUpdateTimer() {\n    this._stopTimeUpdateTimer()\n    this._timeUpdateTimer = setInterval(() => {\n      this._onTimeUpdate()\n    }, 100)\n  }\n\n  _stopTimeUpdateTimer() {\n    this._timeUpdateTimer && clearInterval(this._timeUpdateTimer)\n  }\n\n  // skipping HTML5Video `_setupSrc` (on tag video)\n  _setupSrc () {}\n\n  // skipping ready event on video tag in favor of ready on shaka\n  _ready () {\n    // override with no-op\n  }\n\n  _onShakaReady() {\n    this._isShakaReadyState = true\n    this.trigger(DashShakaPlayback.Events.SHAKA_READY)\n    this.trigger(Events.PLAYBACK_READY, this.name)\n  }\n\n  get isReady () {\n    return this._isShakaReadyState\n  }\n\n  // skipping error handling on video tag in favor of error on shaka\n  error (event) {\n    Log.error('an error was raised by the video tag', event, this.el.error)\n  }\n\n  isHighDefinitionInUse () {\n    return false\n  }\n\n  stop () {\n    this._stopTimeUpdateTimer()\n    clearInterval(this.sendStatsId)\n    this._stopped = true\n\n    if (this._player) {\n      this._sendStats()\n\n      this._player.unload().then(() => {\n        super.stop()\n        this._player = null\n        this._isShakaReadyState = false\n      }).catch(() => {\n        Log.error('shaka could not be unloaded')\n      })\n    } else {\n      super.stop()\n    }\n  }\n\n  get textTracks () {\n    return this.isReady && this._player.getTextTracks()\n  }\n\n  get audioLanguages () {\n    return this.isReady && this._player.getAudioLanguages();\n  }\n\n  get audioTracks () {\n    return this.isReady && this._player.getVariantTracks().filter((t) => t.mimeType.startsWith('audio/'))\n  }\n\n  get videoTracks () {\n    return this.isReady && this._player.getVariantTracks().filter((t) => t.mimeType.startsWith('video/'))\n  }\n\n  getPlaybackType () {\n    return (this.isReady && this._player.isLive() ? 'live' : 'vod') || ''\n  }\n\n  selectAudioLanguage (language, role=null) {\n    this._player.selectAudioLanguage(language, role);\n  }\n\n  selectTrack (track) {\n    if (track.type === 'text') {\n      this._player.selectTextTrack(track)\n    } else if (track.type === 'variant') {\n      this._player.selectVariantTrack(track)\n      if (track.mimeType.startsWith('video/')) {\n        // we trigger the adaptation event here\n        // because Shaka doesn't trigger its event on \"manual\" selection.\n        this._onAdaptation()\n      }\n    } else {\n      throw new Error('Unhandled track type:', track.type)\n    }\n  }\n\n  /**\n   * @override\n   */\n  get closedCaptionsTracks() {\n    let id = 0\n    let trackId = () => { return id++ }\n    let tracks = this.textTracks || []\n\n    return tracks\n      .filter(track => track.kind === 'subtitle')\n      .map(track => { return {id: trackId(), name: track.label || track.language, track: track} })\n  }\n\n  /**\n   * @override\n   */\n  get closedCaptionsTrackId() {\n    return super.closedCaptionsTrackId\n  }\n\n  /**\n   * @override\n   */\n  set closedCaptionsTrackId(trackId) {\n    if (!this._player) {\n      return\n    }\n\n    let tracks = this.closedCaptionsTracks\n    let showingTrack\n\n    // Note: -1 is for hide all tracks\n    if (trackId !== -1) {\n      showingTrack = tracks.find(track => track.id === trackId)\n      if (!showingTrack) {\n        Log.warn(`Track id \"${trackId}\" not found`)\n        return\n      }\n      if (this._shakaTTVisible && showingTrack.track.active === true) {\n        Log.info(`Track id \"${trackId}\" already showing`)\n        return\n      }\n    }\n\n    if (showingTrack) {\n      this._player.selectTextTrack(showingTrack.track)\n      this._player.setTextTrackVisibility(true)\n      this._enableShakaTextTrack(true)\n    } else {\n      this._player.setTextTrackVisibility(false)\n      this._enableShakaTextTrack(false)\n    }\n\n    this._ccTrackId = trackId\n    this.trigger(Events.PLAYBACK_SUBTITLE_CHANGED, {\n      id: trackId\n    })\n  }\n\n  _enableShakaTextTrack(isEnable) {\n    // Shaka player use only one TextTrack object with video element to handle all text tracks\n    // It must be enabled or disabled in addition to call selectTextTrack()\n    if (!this.el.textTracks) {\n      return\n    }\n\n    this._shakaTTVisible = isEnable\n\n    Array.from(this.el.textTracks)\n      .filter(track => track.kind === 'subtitles')\n      .forEach(track => track.mode = isEnable === true ? 'showing' : 'hidden')\n  }\n\n  _checkForClosedCaptions() {\n    if (this._ccIsSetup) {\n      return\n    }\n\n    if (this.hasClosedCaptionsTracks) {\n      this.trigger(Events.PLAYBACK_SUBTITLE_AVAILABLE)\n      const trackId = this.closedCaptionsTrackId\n      this.closedCaptionsTrackId = trackId\n    }\n    this._ccIsSetup = true\n  }\n\n  destroy () {\n    this._stopTimeUpdateTimer()\n    clearInterval(this.sendStatsId)\n\n    if (this._player) {\n      this._player.destroy()\n        .then(() => this._destroy())\n        .catch(() => {\n          this._destroy()\n          Log.error('shaka could not be destroyed')\n        })\n    } else {\n      this._destroy()\n    }\n\n    super.destroy()\n  }\n\n  _setup () {\n    this._isShakaReadyState = false\n    this._ccIsSetup = false\n    this._player = this._createPlayer()\n    this._options.shakaConfiguration && this._player.configure(this._options.shakaConfiguration)\n    this._options.shakaOnBeforeLoad && this._options.shakaOnBeforeLoad(this._player)\n\n    let playerLoaded = this._player.load(this._options.src)\n    playerLoaded.then(() => this._loaded())\n      .catch((e) => this._setupError(e))\n  }\n\n  _createPlayer () {\n    let player = new shaka.Player(this.el)\n    player.addEventListener('error', this._onError.bind(this))\n    player.addEventListener('adaptation', this._onAdaptation.bind(this))\n    player.addEventListener('buffering', this._onBuffering.bind(this))\n    return player\n  }\n\n  _onTimeUpdate() {\n    if (!this.shakaPlayerInstance) return\n\n    const fragDateTime = this.getProgramDateTime();\n    if (!fragDateTime) return\n    let update = {\n      current: this.getCurrentTime(),\n      total: this.getDuration(),\n      firstFragDateTime: fragDateTime\n    }\n    let isSame = this._lastTimeUpdate && (\n      update.current === this._lastTimeUpdate.current &&\n      update.total === this._lastTimeUpdate.total)\n    if (isSame)\n      return\n\n    this._lastTimeUpdate = update\n    this.trigger(Events.PLAYBACK_TIMEUPDATE, update, this.name)\n  }\n\n  _onBuffering (e) {\n    if (this._stopped) return\n    let event = e.buffering ? Events.PLAYBACK_BUFFERING : Events.PLAYBACK_BUFFERFULL\n    this.trigger(event)\n  }\n\n  _loaded () {\n    this._onShakaReady()\n    this._startToSendStats()\n    this._fillLevels()\n    this._checkForClosedCaptions()\n  }\n\n  _fillLevels () {\n    if (this._levels.length === 0) {\n      this._levels = this.videoTracks.slice(0).reverse()\n      this.trigger(Events.PLAYBACK_LEVELS_AVAILABLE, this.levels)\n    }\n  }\n\n  _startToSendStats () {\n    const intervalMs = this._options.shakaSendStatsInterval || SEND_STATS_INTERVAL_MS\n    this.sendStatsId = setInterval(() => this._sendStats(), intervalMs)\n  }\n\n  _sendStats () {\n    this.trigger(Events.PLAYBACK_STATS_ADD, this._player.getStats())\n  }\n\n  _setupError (err) {\n    this._onError(err)\n  }\n\n  _onError (err) {\n    const error = {\n      shakaError: err,\n      videoError: this.el.error\n    }\n\n    let { category, code, severity } = error.shakaError.detail || error.shakaError\n\n    if (error.videoError || !code && !category) return super._onError()\n\n    const isCritical = severity === shaka.util.Error.Severity.CRITICAL\n    const errorData = {\n      code: `${category}_${code}`,\n      description: `Category: ${category}, code: ${code}, severity: ${severity}`,\n      level: isCritical ? PlayerError.Levels.FATAL : PlayerError.Levels.WARN,\n      raw: err\n    }\n    const formattedError = this.createError(errorData)\n    Log.error('Shaka error event:', formattedError)\n    this.trigger(Events.PLAYBACK_ERROR, formattedError)\n  }\n\n\n  _onAdaptation () {\n    let activeVideo = this.videoTracks.filter((t) => t.active === true)[0]\n\n    this._fillLevels()\n\n    // update stats that may have changed before we trigger event\n    // so that user can rely on stats data when handling event\n    this._sendStats()\n\n    if (this._pendingAdaptationEvent) {\n      this.trigger(Events.PLAYBACK_LEVEL_SWITCH_END)\n      this._pendingAdaptationEvent = false\n    }\n\n    Log.debug('an adaptation has happened:', activeVideo)\n    this.highDefinition = (activeVideo.height >= 720)\n    this.trigger(Events.PLAYBACK_HIGHDEFINITIONUPDATE, this.highDefinition)\n    this.trigger(Events.PLAYBACK_BITRATE, {\n      bandwidth: activeVideo.bandwidth,\n      width: activeVideo.width,\n      height: activeVideo.height,\n      language: activeVideo.language,\n      level: activeVideo.id,\n      bitrate: activeVideo.videoBandwidth\n    })\n  }\n\n  _updateSettings() {\n    if (this.getPlaybackType() === 'vod')\n      this.settings.left = ['playpause', 'position', 'duration']\n    else if (this.dvrEnabled)\n      this.settings.left = ['playpause']\n    else\n      this.settings.left = ['playstop']\n\n    this.settings.seekEnabled = this.isSeekEnabled()\n    this.trigger(Events.PLAYBACK_SETTINGSUPDATE)\n  }\n\n  _destroy () {\n    this._isShakaReadyState = false\n    Log.debug('shaka was destroyed')\n  }\n}\n\nexport default DashShakaPlayback\n","module.exports = __WEBPACK_EXTERNAL_MODULE_clappr__;","module.exports = __WEBPACK_EXTERNAL_MODULE_shaka_player__;"],"sourceRoot":""}