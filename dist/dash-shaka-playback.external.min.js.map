{"version":3,"sources":["webpack://DashShakaPlayback/webpack/universalModuleDefinition","webpack://DashShakaPlayback/webpack/bootstrap","webpack://DashShakaPlayback/./src/clappr-dash-shaka-playback.js","webpack://DashShakaPlayback/external {\"amd\":\"clappr\",\"commonjs\":\"clappr\",\"commonjs2\":\"clappr\",\"root\":\"Clappr\"}","webpack://DashShakaPlayback/external \"shaka\""],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DashShakaPlayback","args","_levels","_pendingAdaptationEvent","_isShakaReadyState","_minDvrSize","options","shakaMinimumDvrSize","this","_duration","shakaPlayerInstance","getMediaElement","currentTime","seekRange","start","shaka","player","Player","version","_player","id","_currentLevelId","isAuto","trigger","Events","PLAYBACK_LEVEL_SWITCH_START","configure","abr","enabled","PLAYBACK_LEVEL_SWITCH_END","selectTrack","videoTracks","filter","getPlaybackType","end","getManifest","presentationTimeline","getStats","estimatedBandwidth","resource","mimeType","polyfill","installAll","browserSupported","isBrowserSupported","resourceParts","split","match","indexOf","SHAKA_READY","Date","getPresentationStartTime","status","PLAYBACK_DVR","PLAYBACK_STATS_ADD","time","Log","warn","dvrEnabled","_updateDvr","_startTime","_setup","isReady","_stopped","_src","el","src","_startTimeUpdateTimer","once","play","_stopTimeUpdateTimer","_timeUpdateTimer","setInterval","_onTimeUpdate","clearInterval","PLAYBACK_READY","event","error","sendStatsId","_sendStats","unload","then","catch","isLive","language","role","selectAudioLanguage","track","type","selectTextTrack","Error","selectVariantTrack","startsWith","_onAdaptation","isEnable","textTracks","_shakaTTVisible","Array","from","kind","forEach","_ccIsSetup","hasClosedCaptionsTracks","PLAYBACK_SUBTITLE_AVAILABLE","trackId","closedCaptionsTrackId","destroy","_destroy","_createPlayer","_options","shakaConfiguration","shakaOnBeforeLoad","load","_loaded","e","_setupError","addEventListener","_onError","_onBuffering","update","current","getCurrentTime","total","getDuration","firstFragDateTime","getProgramDateTime","_lastTimeUpdate","PLAYBACK_TIMEUPDATE","buffering","PLAYBACK_BUFFERING","PLAYBACK_BUFFERFULL","_onShakaReady","_startToSendStats","_fillLevels","_checkForClosedCaptions","length","slice","reverse","PLAYBACK_LEVELS_AVAILABLE","levels","intervalMs","shakaSendStatsInterval","err","shakaError","videoError","detail","category","code","severity","errorData","description","level","util","Severity","CRITICAL","PlayerError","Levels","FATAL","WARN","raw","formattedError","createError","PLAYBACK_ERROR","activeVideo","active","debug","highDefinition","height","PLAYBACK_HIGHDEFINITIONUPDATE","PLAYBACK_BITRATE","bandwidth","width","bitrate","videoBandwidth","settings","left","seekEnabled","isSeekEnabled","PLAYBACK_SETTINGSUPDATE","getTextTracks","getAudioLanguages","getVariantTracks","map","label","tracks","closedCaptionsTracks","showingTrack","find","info","setTextTrackVisibility","_enableShakaTextTrack","_ccTrackId","PLAYBACK_SUBTITLE_CHANGED","HTML5Video"],"mappings":"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","file":"dash-shaka-playback.external.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"clappr\"), require(\"shaka\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"clappr\", \"shaka\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DashShakaPlayback\"] = factory(require(\"clappr\"), require(\"shaka\"));\n\telse\n\t\troot[\"DashShakaPlayback\"] = factory(root[\"Clappr\"], root[\"shaka\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {HTML5Video, Log, Events, PlayerError} from 'clappr'\nimport shaka from 'shaka-player'\n\nconst SEND_STATS_INTERVAL_MS = 30 * 1e3\nconst DEFAULT_LEVEL_AUTO = -1\n\nclass DashShakaPlayback extends HTML5Video {\n  static get Events () {\n    return {\n      SHAKA_READY: 'shaka:ready'\n    }\n  }\n\n  static canPlay (resource, mimeType = '') {\n    shaka.polyfill.installAll()\n    let browserSupported = shaka.Player.isBrowserSupported()\n    let resourceParts = resource.split('?')[0].match(/.*\\.(.*)$/) || []\n    return browserSupported && ((resourceParts[1] === 'mpd') || mimeType.indexOf('application/dash+xml') > -1)\n  }\n\n  get name () {\n    return 'dash_shaka_playback'\n  }\n\n  get shakaVersion () {\n    return shaka.player.Player.version\n  }\n\n  get shakaPlayerInstance () {\n    return this._player\n  }\n\n  get levels () {\n    return this._levels\n  }\n\n  get seekRange() {\n    return this.shakaPlayerInstance.seekRange()\n  }\n\n  set currentLevel (id) {\n    this._currentLevelId = id\n    let isAuto = this._currentLevelId === DEFAULT_LEVEL_AUTO\n\n    this.trigger(Events.PLAYBACK_LEVEL_SWITCH_START)\n    if (!isAuto) {\n      this._player.configure({abr: {enabled: false}})\n      this._pendingAdaptationEvent = true\n      this.selectTrack(this.videoTracks.filter((t) => t.id === this._currentLevelId)[0])\n    }\n    else {\n      this._player.configure({abr: {enabled: true}})\n      this.trigger(Events.PLAYBACK_LEVEL_SWITCH_END)\n    }\n  }\n\n  get currentLevel () {\n    return this._currentLevelId || DEFAULT_LEVEL_AUTO\n  }\n\n  get dvrEnabled() {\n    return this._duration >= this._minDvrSize && this.getPlaybackType() === 'live'\n  }\n\n  getDuration() {\n    return this._duration\n  }\n\n  get _duration() {\n    if (!this.shakaPlayerInstance) return 0\n\n    return this.seekRange.end - this.seekRange.start\n  }\n\n  getCurrentTime() {\n    return this.shakaPlayerInstance.getMediaElement().currentTime - this.seekRange.start\n  }\n\n  get _startTime() {\n    return this.seekRange.start\n  }\n\n  get presentationTimeline() {\n    return this.shakaPlayerInstance.getManifest().presentationTimeline\n  }\n\n  get bandwidthEstimate() {\n    if (!this.shakaPlayerInstance) return\n    return this.shakaPlayerInstance.getStats().estimatedBandwidth\n  }\n\n  constructor (...args) {\n    super(...args)\n    this._levels = []\n    this._pendingAdaptationEvent = false\n    this._isShakaReadyState = false\n\n    this._minDvrSize = typeof (this.options.shakaMinimumDvrSize) === 'undefined' ? 60 : this.options.shakaMinimumDvrSize\n  }\n\n  getProgramDateTime() {\n    return new Date((this.presentationTimeline.getPresentationStartTime() + this.seekRange.start) * 1000)\n  }\n\n  _updateDvr(status) {\n    this.trigger(Events.PLAYBACK_DVR, status)\n    this.trigger(Events.PLAYBACK_STATS_ADD, { 'dvr': status })\n  }\n\n  seek(time) {\n    if (time < 0) {\n      Log.warn('Attempt to seek to a negative time. Resetting to live point. Use seekToLivePoint() to seek to the live point.')\n      time = this._duration\n    }\n    // assume live if time within 3 seconds of end of stream\n    this.dvrEnabled && this._updateDvr(time < this._duration-3)\n    time += this._startTime\n    super.seek(time)\n  }\n\n  pause() {\n    super.pause()\n\n    if (this.dvrEnabled)\n      this._updateDvr(true)\n  }\n\n  play () {\n    if (!this._player) {\n      this._setup()\n    }\n\n    if (!this.isReady) {\n      this.once(DashShakaPlayback.Events.SHAKA_READY, this.play)\n      return\n    }\n\n    this._stopped = false\n    this._src = this.el.src\n    super.play()\n    this._startTimeUpdateTimer()\n  }\n\n  _startTimeUpdateTimer() {\n    this._stopTimeUpdateTimer()\n    this._timeUpdateTimer = setInterval(() => {\n      this._onTimeUpdate()\n    }, 100)\n  }\n\n  _stopTimeUpdateTimer() {\n    this._timeUpdateTimer && clearInterval(this._timeUpdateTimer)\n  }\n\n  // skipping HTML5Video `_setupSrc` (on tag video)\n  _setupSrc () {}\n\n  // skipping ready event on video tag in favor of ready on shaka\n  _ready () {\n    // override with no-op\n  }\n\n  _onShakaReady() {\n    this._isShakaReadyState = true\n    this.trigger(DashShakaPlayback.Events.SHAKA_READY)\n    this.trigger(Events.PLAYBACK_READY, this.name)\n  }\n\n  get isReady () {\n    return this._isShakaReadyState\n  }\n\n  // skipping error handling on video tag in favor of error on shaka\n  error (event) {\n    Log.error('an error was raised by the video tag', event, this.el.error)\n  }\n\n  isHighDefinitionInUse () {\n    return false\n  }\n\n  stop () {\n    this._stopTimeUpdateTimer()\n    clearInterval(this.sendStatsId)\n    this._stopped = true\n\n    if (this._player) {\n      this._sendStats()\n\n      this._player.unload().then(() => {\n        super.stop()\n        this._player = null\n        this._isShakaReadyState = false\n      }).catch(() => {\n        Log.error('shaka could not be unloaded')\n      })\n    } else {\n      super.stop()\n    }\n  }\n\n  get textTracks () {\n    return this.isReady && this._player.getTextTracks()\n  }\n\n  get audioLanguages () {\n    return this.isReady && this._player.getAudioLanguages();\n  }\n\n  get audioTracks () {\n    return this.isReady && this._player.getVariantTracks().filter((t) => t.mimeType.startsWith('audio/'))\n  }\n\n  get videoTracks () {\n    return this.isReady && this._player.getVariantTracks().filter((t) => t.mimeType.startsWith('video/'))\n  }\n\n  getPlaybackType () {\n    return (this.isReady && this._player.isLive() ? 'live' : 'vod') || ''\n  }\n\n  selectAudioLanguage (language, role=null) {\n    this._player.selectAudioLanguage(language, role);\n  }\n\n  selectTrack (track) {\n    if (track.type === 'text') {\n      this._player.selectTextTrack(track)\n    } else if (track.type === 'variant') {\n      this._player.selectVariantTrack(track)\n      if (track.mimeType.startsWith('video/')) {\n        // we trigger the adaptation event here\n        // because Shaka doesn't trigger its event on \"manual\" selection.\n        this._onAdaptation()\n      }\n    } else {\n      throw new Error('Unhandled track type:', track.type)\n    }\n  }\n\n  /**\n   * @override\n   */\n  get closedCaptionsTracks() {\n    let id = 0\n    let trackId = () => { return id++ }\n    let tracks = this.textTracks || []\n\n    return tracks\n      .filter(track => track.kind === 'subtitle')\n      .map(track => { return {id: trackId(), name: track.label || track.language, track: track} })\n  }\n\n  /**\n   * @override\n   */\n  get closedCaptionsTrackId() {\n    return super.closedCaptionsTrackId\n  }\n\n  /**\n   * @override\n   */\n  set closedCaptionsTrackId(trackId) {\n    if (!this._player) {\n      return\n    }\n\n    let tracks = this.closedCaptionsTracks\n    let showingTrack\n\n    // Note: -1 is for hide all tracks\n    if (trackId !== -1) {\n      showingTrack = tracks.find(track => track.id === trackId)\n      if (!showingTrack) {\n        Log.warn(`Track id \"${trackId}\" not found`)\n        return\n      }\n      if (this._shakaTTVisible && showingTrack.track.active === true) {\n        Log.info(`Track id \"${trackId}\" already showing`)\n        return\n      }\n    }\n\n    if (showingTrack) {\n      this._player.selectTextTrack(showingTrack.track)\n      this._player.setTextTrackVisibility(true)\n      this._enableShakaTextTrack(true)\n    } else {\n      this._player.setTextTrackVisibility(false)\n      this._enableShakaTextTrack(false)\n    }\n\n    this._ccTrackId = trackId\n    this.trigger(Events.PLAYBACK_SUBTITLE_CHANGED, {\n      id: trackId\n    })\n  }\n\n  _enableShakaTextTrack(isEnable) {\n    // Shaka player use only one TextTrack object with video element to handle all text tracks\n    // It must be enabled or disabled in addition to call selectTextTrack()\n    if (!this.el.textTracks) {\n      return\n    }\n\n    this._shakaTTVisible = isEnable\n\n    Array.from(this.el.textTracks)\n      .filter(track => track.kind === 'subtitles')\n      .forEach(track => track.mode = isEnable === true ? 'showing' : 'hidden')\n  }\n\n  _checkForClosedCaptions() {\n    if (this._ccIsSetup) {\n      return\n    }\n\n    if (this.hasClosedCaptionsTracks) {\n      this.trigger(Events.PLAYBACK_SUBTITLE_AVAILABLE)\n      const trackId = this.closedCaptionsTrackId\n      this.closedCaptionsTrackId = trackId\n    }\n    this._ccIsSetup = true\n  }\n\n  destroy () {\n    this._stopTimeUpdateTimer()\n    clearInterval(this.sendStatsId)\n\n    if (this._player) {\n      this._player.destroy()\n        .then(() => this._destroy())\n        .catch(() => {\n          this._destroy()\n          Log.error('shaka could not be destroyed')\n        })\n    } else {\n      this._destroy()\n    }\n\n    super.destroy()\n  }\n\n  _setup () {\n    this._isShakaReadyState = false\n    this._ccIsSetup = false\n    this._player = this._createPlayer()\n    this._options.shakaConfiguration && this._player.configure(this._options.shakaConfiguration)\n    this._options.shakaOnBeforeLoad && this._options.shakaOnBeforeLoad(this._player)\n\n    let playerLoaded = this._player.load(this._options.src)\n    playerLoaded.then(() => this._loaded())\n      .catch((e) => this._setupError(e))\n  }\n\n  _createPlayer () {\n    let player = new shaka.Player(this.el)\n    player.addEventListener('error', this._onError.bind(this))\n    player.addEventListener('adaptation', this._onAdaptation.bind(this))\n    player.addEventListener('buffering', this._onBuffering.bind(this))\n    return player\n  }\n\n  _onTimeUpdate() {\n    if (!this.shakaPlayerInstance) return\n\n    let update = {\n      current: this.getCurrentTime(),\n      total: this.getDuration(),\n      firstFragDateTime: this.getProgramDateTime()\n    }\n    let isSame = this._lastTimeUpdate && (\n      update.current === this._lastTimeUpdate.current &&\n      update.total === this._lastTimeUpdate.total)\n    if (isSame)\n      return\n\n    this._lastTimeUpdate = update\n    this.trigger(Events.PLAYBACK_TIMEUPDATE, update, this.name)\n  }\n\n  _onBuffering (e) {\n    if (this._stopped) return\n    let event = e.buffering ? Events.PLAYBACK_BUFFERING : Events.PLAYBACK_BUFFERFULL\n    this.trigger(event)\n  }\n\n  _loaded () {\n    this._onShakaReady()\n    this._startToSendStats()\n    this._fillLevels()\n    this._checkForClosedCaptions()\n  }\n\n  _fillLevels () {\n    if (this._levels.length === 0) {\n      this._levels = this.videoTracks.slice(0).reverse()\n      this.trigger(Events.PLAYBACK_LEVELS_AVAILABLE, this.levels)\n    }\n  }\n\n  _startToSendStats () {\n    const intervalMs = this._options.shakaSendStatsInterval || SEND_STATS_INTERVAL_MS\n    this.sendStatsId = setInterval(() => this._sendStats(), intervalMs)\n  }\n\n  _sendStats () {\n    this.trigger(Events.PLAYBACK_STATS_ADD, this._player.getStats())\n  }\n\n  _setupError (err) {\n    this._onError(err)\n  }\n\n  _onError (err) {\n    const error = {\n      shakaError: err,\n      videoError: this.el.error\n    }\n\n    let { category, code, severity } = error.shakaError.detail || error.shakaError\n\n    if (error.videoError || !code && !category) return super._onError()\n\n    const isCritical = severity === shaka.util.Error.Severity.CRITICAL\n    const errorData = {\n      code: `${category}_${code}`,\n      description: `Category: ${category}, code: ${code}, severity: ${severity}`,\n      level: isCritical ? PlayerError.Levels.FATAL : PlayerError.Levels.WARN,\n      raw: err\n    }\n    const formattedError = this.createError(errorData)\n    Log.error('Shaka error event:', formattedError)\n    this.trigger(Events.PLAYBACK_ERROR, formattedError)\n  }\n\n\n  _onAdaptation () {\n    let activeVideo = this.videoTracks.filter((t) => t.active === true)[0]\n\n    this._fillLevels()\n\n    // update stats that may have changed before we trigger event\n    // so that user can rely on stats data when handling event\n    this._sendStats()\n\n    if (this._pendingAdaptationEvent) {\n      this.trigger(Events.PLAYBACK_LEVEL_SWITCH_END)\n      this._pendingAdaptationEvent = false\n    }\n\n    Log.debug('an adaptation has happened:', activeVideo)\n    this.highDefinition = (activeVideo.height >= 720)\n    this.trigger(Events.PLAYBACK_HIGHDEFINITIONUPDATE, this.highDefinition)\n    this.trigger(Events.PLAYBACK_BITRATE, {\n      bandwidth: activeVideo.bandwidth,\n      width: activeVideo.width,\n      height: activeVideo.height,\n      language: activeVideo.language,\n      level: activeVideo.id,\n      bitrate: activeVideo.videoBandwidth\n    })\n  }\n\n  _updateSettings() {\n    if (this.getPlaybackType() === 'vod')\n      this.settings.left = ['playpause', 'position', 'duration']\n    else if (this.dvrEnabled)\n      this.settings.left = ['playpause']\n    else\n      this.settings.left = ['playstop']\n\n    this.settings.seekEnabled = this.isSeekEnabled()\n    this.trigger(Events.PLAYBACK_SETTINGSUPDATE)\n  }\n\n  _destroy () {\n    this._isShakaReadyState = false\n    Log.debug('shaka was destroyed')\n  }\n}\n\nexport default DashShakaPlayback\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;"],"sourceRoot":""}